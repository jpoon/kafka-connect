{{- $loginModule := "org.apache.kafka.common.security.plain.PlainLoginModule required" -}}
{{- $loginUsername := "username=\"$$ConnectionString\"" -}}
{{- $loginPassword := printf "password=\"%s\"" .Values.connect.eventHubConnectionString -}}
{{- $saslJaasConfig := printf "%s %s %s;" $loginModule $loginUsername $loginPassword -}}
{{- $pluginPath := "/usr/share/java" }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "kafka-connect.fullname" . }}
  labels:
    app: {{ template "kafka-connect.name" . }}
    chart: {{ template "kafka-connect.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  restartPolicy: {{ .Values.restartPolicy }}
  selector:
    matchLabels:
      app: {{ template "kafka-connect.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "kafka-connect.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8083
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
          env:
          - name: CONNECT_BOOTSTRAP_SERVERS
            value: "{{ .Values.connect.bootstrapServers }}"
          - name: CONNECT_GROUP_ID
            value: "{{ .Values.connect.groupId }}"
          - name: CONNECT_CONFIG_STORAGE_TOPIC
            value: "connect-config"
          - name: CONNECT_OFFSET_STORAGE_TOPIC
            value: "connect-offset"
          - name: CONNECT_STATUS_STORAGE_TOPIC
            value: "connect-status"
          - name: CONNECT_KEY_CONVERTER
            value: "org.apache.kafka.connect.json.JsonConverter"
          - name: CONNECT_VALUE_CONVERTER
            value: "org.apache.kafka.connect.json.JsonConverter"
          - name: CONNECT_INTERNAL_KEY_CONVERTER
            value: "org.apache.kafka.connect.json.JsonConverter"
          - name: CONNECT_INTERNAL_VALUE_CONVERTER
            value: "org.apache.kafka.connect.json.JsonConverter"
          - name: CONNECT_REST_ADVERTISED_HOST_NAME
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: CONNECT_SECURITY_PROTOCOL
            value: "SASL_SSL"
          - name: CONNECT_SASL_MECHANISM
            value: "PLAIN"
          - name: CONNECT_SASL_JAAS_CONFIG
            value: {{ $saslJaasConfig }}
          - name: CONNECT_PRODUCER_SECURITY_PROTOCOL
            value: "SASL_SSL"
          - name: CONNECT_PRODUCER_SASL_MECHANISM
            value: "PLAIN"
          - name: CONNECT_PRODUCER_SASL_JAAS_CONFIG
            value: {{ $saslJaasConfig }}
          - name: CONNECT_CONSUMER_SASL_MECHANISM
            value: "PLAIN"
          - name: CONNECT_CONSUMER_SASL_JAAS_CONFIG
            value: {{ $saslJaasConfig }}
          - name: CONNECT_PLUGIN_PATH
            value: {{ $pluginPath }}
          - name: CONNECT_LOG4J_ROOT_LOGLEVEL
            value: "INFO"
          - name: CONNECT_LOG4J_LOGGERS
            value: "org.reflections=ERROR"
          volumeMounts:
          - name: jdbc-drivers
            mountPath: {{ $pluginPath }}/kafka-connect-jdbc/drivers
      initContainers:
        - name: {{ .Chart.Name }}-init-mysql
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh"]
          args:
          - -c
          - set -x; cd {{ $pluginPath }}/kafka-connect-jdbc/drivers; curl -O https://github.com/jpoon/kafka-connect/raw/master/connector/mysql-connector-java-8.0.11.jar; ls
          volumeMounts:
          - name: jdbc-drivers
            mountPath: {{ $pluginPath }}/kafka-connect-jdbc/drivers
      volumes:
      - name: jdbc-drivers
        emptyDir: {}